version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: billing-agent-db
    environment:
      POSTGRES_DB: billing_agent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - billing-network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: billing-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - billing-network

  # FastAPI Application
  api:
    build: .
    container_name: billing-agent-api
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - billing-network
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build: .
    container_name: billing-agent-worker
    command: celery -A tasks.celery_app worker --loglevel=info --concurrency=4
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - billing-network
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    container_name: billing-agent-beat
    command: celery -A tasks.celery_app beat --loglevel=info
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - billing-network
    restart: unless-stopped

  # Flower (Celery Monitoring)
  flower:
    build: .
    container_name: billing-agent-flower
    command: celery -A tasks.celery_app flower --port=5555
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker
    networks:
      - billing-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  billing-network:
    driver: bridge

